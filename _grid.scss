@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
    "0":0,
    "1":10px,
    "2":20px,
    "3":30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

// base layout classes

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

@each $key, $val in $grid-gaps {
    .gap-#{$key}  > * {
        padding: $val;
    }

    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

// Justify content classses

@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

// create the classes

@mixin col($cols) {
    box-sizing: border-box;
    flex-grow: 0;
    width: math.div($cols * 100%, $grid-columns);
}

@include tiny {
    @for $i from 1 through $grid-columns {
        .showAcross-#{$i}-cols-forScreen-tiny {
            @include col($i);
        }
    }
}
@include small {
    @for $i from 1 through $grid-columns {
        .showAcross-#{$i}-cols-forScreen-small {
            @include col($i);
        }
    }
}
@include medium {
    @for $i from 1 through $grid-columns {
        .showAcross-#{$i}-cols-forScreen-medium {
            @include col($i);
        }
    }
}
@include large {
    @for $i from 1 through $grid-columns {
        .showAcross-#{$i}-cols-forScreen-large {
            @include col($i);
        }
    }
}
@include xlarge {
    @for $i from 1 through $grid-columns {
        .showAcross-#{$i}-cols-forScreen-xlarge {
            @include col($i);
        }
    }
}
@include xxlarge {
    @for $i from 1 through $grid-columns {
        .showAcross-#{$i}-cols-forScreen-xxlarge {
            @include col($i);
        }
    }
}
